---

- name: VOTING APP 04 | Manage Database ConfigMap
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: db
        namespace: "{{ app_namespace }}"
      data:
        service.name: "{{ item.service_name }}"
        db.name: "{{ item.db_name }}"
  with_items: "{{ database_configmap }}"

- name: VOTING APP 04 | Manage Database Deployment
  k8s:
    state: present
    force: yes
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "{{ item.name }}"
        namespace: "{{ app_namespace }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: "{{ item.name }}"
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 1
        template:
          metadata:
            labels:
              app: "{{ item.name }}"
          spec:
            containers:
            - name: "{{ item.name }}"
              image: "{{ item.image }}"
              env:
                - name: "DB_NAME"
                  valueFrom:
                    configMapKeyRef:
                      name: db
                      key: db.name
                - name: "DB_USERNAME"
                  valueFrom:
                    secretKeyRef:
                      name: db
                      key: username
                - name: "DB_PASSWORD"
                  valueFrom:
                    secretKeyRef:
                      name: db
                      key: password
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: db-data
            volumes:
              - name: db-data
                emptyDir: {}
  with_items: "{{ database_deployment }}"
